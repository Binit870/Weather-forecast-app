{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import axios from\"axios\";// OpenWeather API Key\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WEATHER_API_KEY=\"b1acf5ad58207f82b893cc4d3b3d7258\";// Unsplash API Key\nconst UNSPLASH_ACCESS_KEY=\"X5QNK00W7x-dpLRsdrYinUA6_mAUM8NMMIqhdlgBjoY\";const WeatherForecast=()=>{const[forecast,setForecast]=useState([]);const[city,setCity]=useState(\"Jamshedpur\");const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const[weatherCondition,setWeatherCondition]=useState(\"\");// For background image\nconst[backgroundImage,setBackgroundImage]=useState(\"\");// Background image URL\n// Function to fetch weather data\nconst fetchWeatherData=useCallback(async()=>{setLoading(true);setError(\"\");try{const response=await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${WEATHER_API_KEY}`);if(response.data.cod!==\"200\"){setError(\"City not found. Please try again.\");setForecast([]);setWeatherCondition(\"\");// Reset background if city not found\n}else{// ✅ Create a map to store unique days\nconst uniqueDays=new Map();// ✅ Filter forecast for the next 5 days (including today)\nconst fiveDayForecast=response.data.list.filter(reading=>{const date=reading.dt_txt.split(\" \")[0];// Extract date (YYYY-MM-DD)\nif(!uniqueDays.has(date)){uniqueDays.set(date,true);return true;}return false;});// ✅ Slice to ensure we only get 5 days (today + next 4)\nsetForecast(fiveDayForecast.slice(0,5));// ✅ Set background based on today's weather\nsetWeatherCondition(response.data.list[0].weather[0].main);}}catch(error){console.error(\"Error fetching weather data:\",error);setError(\"Something went wrong. Please try again later.\");}finally{setLoading(false);}},[city]);// Function to fetch background image based on weather condition\nconst fetchBackgroundImage=useCallback(async()=>{if(!weatherCondition)return;// Avoid API call if no condition is set\nconst query=`${weatherCondition} weather`;// Example: \"Rainy weather\"\ntry{const response=await axios.get(`https://api.unsplash.com/photos/random?query=${query}&client_id=${UNSPLASH_ACCESS_KEY}`);setBackgroundImage(response.data.urls.regular);}catch(error){console.error(\"Error fetching background image:\",error);setBackgroundImage(\"/default-weather.jpg\");// Use fallback image\n}},[weatherCondition]);// Fetch weather on first load + when city changes\nuseEffect(()=>{fetchWeatherData();},[fetchWeatherData]);// Fetch background image when weather condition changes\nuseEffect(()=>{fetchBackgroundImage();},[fetchBackgroundImage]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center p-6 bg-cover bg-center relative\",style:{backgroundImage:`url(${backgroundImage})`,backgroundSize:\"cover\",backgroundPosition:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black/50\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10 max-w-6xl w-full bg-white/20 backdrop-blur-md rounded-lg shadow-xl p-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-extrabold text-center text-white mb-6\",children:\"5-Day Weather Forecast\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row justify-center mb-6 gap-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:city,onChange:e=>setCity(e.target.value),placeholder:\"Enter city name...\",className:\"w-full sm:w-80 p-3 border-2 border-gray-300 rounded-md focus:outline-none focus:border-blue-500 transition bg-white text-gray-800\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchWeatherData,className:\"w-full sm:w-auto bg-blue-600 text-white px-5 py-3 rounded-md font-semibold hover:bg-blue-700 transition duration-300\",children:\"Get Forecast\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 text-center mb-4\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-white font-semibold text-lg animate-pulse\",children:\"Loading weather data...\"}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6\",children:forecast.map(day=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 rounded-lg shadow-lg text-center transition transform hover:scale-105 hover:shadow-2xl bg-white/30 backdrop-blur-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold text-white\",children:new Date(day.dt_txt).toLocaleDateString()}),/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,alt:day.weather[0].description,className:\"mx-auto w-24\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-3xl font-bold text-white\",children:[Math.round(day.main.temp),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"capitalize text-gray-200 text-lg\",children:day.weather[0].description})]},day.dt))})})]})]});};export default WeatherForecast;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WEATHER_API_KEY","UNSPLASH_ACCESS_KEY","WeatherForecast","forecast","setForecast","city","setCity","loading","setLoading","error","setError","weatherCondition","setWeatherCondition","backgroundImage","setBackgroundImage","fetchWeatherData","response","get","data","cod","uniqueDays","Map","fiveDayForecast","list","filter","reading","date","dt_txt","split","has","set","slice","weather","main","console","fetchBackgroundImage","query","urls","regular","className","style","backgroundSize","backgroundPosition","children","type","value","onChange","e","target","placeholder","onClick","map","day","Date","toLocaleDateString","src","icon","alt","description","Math","round","temp","dt"],"sources":["C:/Users/Rohit Murmu/Desktop/Github/Weather-forecast-app/weather-application/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// OpenWeather API Key\r\nconst WEATHER_API_KEY = \"b1acf5ad58207f82b893cc4d3b3d7258\";\r\n// Unsplash API Key\r\nconst UNSPLASH_ACCESS_KEY = \"X5QNK00W7x-dpLRsdrYinUA6_mAUM8NMMIqhdlgBjoY\";\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecast, setForecast] = useState([]);\r\n  const [city, setCity] = useState(\"Jamshedpur\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [weatherCondition, setWeatherCondition] = useState(\"\"); // For background image\r\n  const [backgroundImage, setBackgroundImage] = useState(\"\"); // Background image URL\r\n\r\n  // Function to fetch weather data\r\n  const fetchWeatherData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${WEATHER_API_KEY}`\r\n      );\r\n      if (response.data.cod !== \"200\") {\r\n        setError(\"City not found. Please try again.\");\r\n        setForecast([]);\r\n        setWeatherCondition(\"\"); // Reset background if city not found\r\n      } else {\r\n        \r\n        // ✅ Create a map to store unique days\r\n        const uniqueDays = new Map();\r\n\r\n        // ✅ Filter forecast for the next 5 days (including today)\r\n        const fiveDayForecast = response.data.list.filter((reading) => {\r\n          const date = reading.dt_txt.split(\" \")[0]; // Extract date (YYYY-MM-DD)\r\n          if (!uniqueDays.has(date)) {\r\n            uniqueDays.set(date, true);\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n\r\n        // ✅ Slice to ensure we only get 5 days (today + next 4)\r\n        setForecast(fiveDayForecast.slice(0, 5));\r\n\r\n        // ✅ Set background based on today's weather\r\n        setWeatherCondition(response.data.list[0].weather[0].main);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather data:\", error);\r\n      setError(\"Something went wrong. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [city]);\r\n\r\n  // Function to fetch background image based on weather condition\r\n  const fetchBackgroundImage = useCallback(async () => {\r\n    if (!weatherCondition) return; // Avoid API call if no condition is set\r\n\r\n    const query = `${weatherCondition} weather`; // Example: \"Rainy weather\"\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.unsplash.com/photos/random?query=${query}&client_id=${UNSPLASH_ACCESS_KEY}`\r\n      );\r\n      setBackgroundImage(response.data.urls.regular);\r\n    } catch (error) {\r\n      console.error(\"Error fetching background image:\", error);\r\n      setBackgroundImage(\"/default-weather.jpg\"); // Use fallback image\r\n    }\r\n  }, [weatherCondition]);\r\n\r\n  // Fetch weather on first load + when city changes\r\n  useEffect(() => {\r\n    fetchWeatherData();\r\n  }, [fetchWeatherData]);\r\n\r\n  // Fetch background image when weather condition changes\r\n  useEffect(() => {\r\n    fetchBackgroundImage();\r\n  }, [fetchBackgroundImage]);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex flex-col items-center justify-center p-6 bg-cover bg-center relative\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    >\r\n      {/* Dark Overlay for Better Text Visibility */}\r\n      <div className=\"absolute inset-0 bg-black/50\"></div>\r\n\r\n      <div className=\"relative z-10 max-w-6xl w-full bg-white/20 backdrop-blur-md rounded-lg shadow-xl p-8\">\r\n        <h1 className=\"text-4xl font-extrabold text-center text-white mb-6\">\r\n          5-Day Weather Forecast\r\n        </h1>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"flex flex-col sm:flex-row justify-center mb-6 gap-3\">\r\n          <input\r\n            type=\"text\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            placeholder=\"Enter city name...\"\r\n            className=\"w-full sm:w-80 p-3 border-2 border-gray-300 rounded-md focus:outline-none focus:border-blue-500 transition bg-white text-gray-800\"\r\n          />\r\n          <button\r\n            onClick={fetchWeatherData}\r\n            className=\"w-full sm:w-auto bg-blue-600 text-white px-5 py-3 rounded-md font-semibold hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            Get Forecast\r\n          </button>\r\n        </div>\r\n\r\n        {/* Error Message */}\r\n        {error && <p className=\"text-red-400 text-center mb-4\">{error}</p>}\r\n\r\n        {/* Loading Animation */}\r\n        {loading ? (\r\n          <div className=\"text-center text-white font-semibold text-lg animate-pulse\">\r\n            Loading weather data...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* ✅ Display 5-Day Forecast (Including Today) */}\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6\">\r\n              {forecast.map((day) => (\r\n                <div\r\n                  key={day.dt}\r\n                  className=\"p-6 rounded-lg shadow-lg text-center transition transform hover:scale-105 hover:shadow-2xl bg-white/30 backdrop-blur-lg\"\r\n                >\r\n                  <p className=\"font-bold text-white\">\r\n                    {new Date(day.dt_txt).toLocaleDateString()}\r\n                  </p>\r\n                  <img\r\n                    src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                    alt={day.weather[0].description}\r\n                    className=\"mx-auto w-24\"\r\n                  />\r\n                  <p className=\"text-3xl font-bold text-white\">\r\n                    {Math.round(day.main.temp)}°C\r\n                  </p>\r\n                  <p className=\"capitalize text-gray-200 text-lg\">\r\n                    {day.weather[0].description}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}