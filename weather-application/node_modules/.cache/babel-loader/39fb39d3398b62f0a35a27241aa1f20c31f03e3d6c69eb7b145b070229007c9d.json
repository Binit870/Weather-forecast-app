{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohit Murmu\\\\Desktop\\\\Github\\\\Weather-forecast-app\\\\weather-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\n// OpenWeather API Key\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEATHER_API_KEY = \"b1acf5ad58207f82b893cc4d3b3d7258\";\n// Unsplash API Key\nconst UNSPLASH_ACCESS_KEY = \"X5QNK00W7x-dpLRsdrYinUA6_mAUM8NMMIqhdlgBjoY\";\nconst WeatherForecast = () => {\n  _s();\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState(\"Jamshedpur\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [weatherCondition, setWeatherCondition] = useState(\"\"); // For background image\n  const [backgroundImage, setBackgroundImage] = useState(\"\"); // Background image URL\n\n  // Function to fetch weather data\n  const fetchWeatherData = useCallback(async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${WEATHER_API_KEY}`);\n      if (response.data.cod !== \"200\") {\n        setError(\"City not found. Please try again.\");\n        setForecast([]);\n        setWeatherCondition(\"\"); // Reset background if city not found\n      } else {\n        // ✅ Create a map to store unique days\n        const uniqueDays = new Map();\n\n        // ✅ Filter forecast for the next 5 days (including today)\n        const fiveDayForecast = response.data.list.filter(reading => {\n          const date = reading.dt_txt.split(\" \")[0]; // Extract date (YYYY-MM-DD)\n          if (!uniqueDays.has(date)) {\n            uniqueDays.set(date, true);\n            return true;\n          }\n          return false;\n        });\n\n        // ✅ Slice to ensure we only get 5 days (today + next 4)\n        setForecast(fiveDayForecast.slice(0, 5));\n\n        // ✅ Set background based on today's weather\n        setWeatherCondition(response.data.list[0].weather[0].main);\n      }\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(\"Something went wrong. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [city]);\n\n  // Function to fetch background image based on weather condition\n  const fetchBackgroundImage = useCallback(async () => {\n    if (!weatherCondition) return; // Avoid API call if no condition is set\n\n    const query = `${weatherCondition} weather`; // Example: \"Rainy weather\"\n    try {\n      const response = await axios.get(`https://api.unsplash.com/photos/random?query=${query}&client_id=${UNSPLASH_ACCESS_KEY}`);\n      setBackgroundImage(response.data.urls.regular);\n    } catch (error) {\n      console.error(\"Error fetching background image:\", error);\n      setBackgroundImage(\"/default-weather.jpg\"); // Use fallback image\n    }\n  }, [weatherCondition]);\n\n  // Fetch weather on first load + when city changes\n  useEffect(() => {\n    fetchWeatherData();\n  }, [fetchWeatherData]);\n\n  // Fetch background image when weather condition changes\n  useEffect(() => {\n    fetchBackgroundImage();\n  }, [fetchBackgroundImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center p-6 bg-cover bg-center relative\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black/50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10 max-w-6xl w-full bg-white/20 backdrop-blur-md rounded-lg shadow-xl p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-center text-white mb-6\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row justify-center mb-6 gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter city name...\",\n          className: \"w-full sm:w-80 p-3 border-2 border-gray-300 rounded-md focus:outline-none focus:border-blue-500 transition bg-white text-gray-800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchWeatherData,\n          className: \"w-full sm:w-auto bg-blue-600 text-white px-5 py-3 rounded-md font-semibold hover:bg-blue-700 transition duration-300\",\n          children: \"Get Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white font-semibold text-lg animate-pulse\",\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6\",\n          children: forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 rounded-lg shadow-lg text-center transition transform hover:scale-105 hover:shadow-2xl bg-white/30 backdrop-blur-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold text-white\",\n              children: new Date(day.dt_txt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n              alt: day.weather[0].description,\n              className: \"mx-auto w-24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-white\",\n              children: [Math.round(day.main.temp), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"capitalize text-gray-200 text-lg\",\n              children: day.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, day.dt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"P7LDsxhYssQB1MgfX9k1KwG1Sxk=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","HashRouter","Router","jsxDEV","_jsxDEV","Fragment","_Fragment","WEATHER_API_KEY","UNSPLASH_ACCESS_KEY","WeatherForecast","_s","forecast","setForecast","city","setCity","loading","setLoading","error","setError","weatherCondition","setWeatherCondition","backgroundImage","setBackgroundImage","fetchWeatherData","response","get","data","cod","uniqueDays","Map","fiveDayForecast","list","filter","reading","date","dt_txt","split","has","set","slice","weather","main","console","fetchBackgroundImage","query","urls","regular","className","style","backgroundSize","backgroundPosition","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","day","Date","toLocaleDateString","src","icon","alt","description","Math","round","temp","dt","_c","$RefreshReg$"],"sources":["C:/Users/Rohit Murmu/Desktop/Github/Weather-forecast-app/weather-application/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\n\r\n// OpenWeather API Key\r\nconst WEATHER_API_KEY = \"b1acf5ad58207f82b893cc4d3b3d7258\";\r\n// Unsplash API Key\r\nconst UNSPLASH_ACCESS_KEY = \"X5QNK00W7x-dpLRsdrYinUA6_mAUM8NMMIqhdlgBjoY\";\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecast, setForecast] = useState([]);\r\n  const [city, setCity] = useState(\"Jamshedpur\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [weatherCondition, setWeatherCondition] = useState(\"\"); // For background image\r\n  const [backgroundImage, setBackgroundImage] = useState(\"\"); // Background image URL\r\n\r\n  // Function to fetch weather data\r\n  const fetchWeatherData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${WEATHER_API_KEY}`\r\n      );\r\n      if (response.data.cod !== \"200\") {\r\n        setError(\"City not found. Please try again.\");\r\n        setForecast([]);\r\n        setWeatherCondition(\"\"); // Reset background if city not found\r\n      } else {\r\n        \r\n        // ✅ Create a map to store unique days\r\n        const uniqueDays = new Map();\r\n\r\n        // ✅ Filter forecast for the next 5 days (including today)\r\n        const fiveDayForecast = response.data.list.filter((reading) => {\r\n          const date = reading.dt_txt.split(\" \")[0]; // Extract date (YYYY-MM-DD)\r\n          if (!uniqueDays.has(date)) {\r\n            uniqueDays.set(date, true);\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n\r\n        // ✅ Slice to ensure we only get 5 days (today + next 4)\r\n        setForecast(fiveDayForecast.slice(0, 5));\r\n\r\n        // ✅ Set background based on today's weather\r\n        setWeatherCondition(response.data.list[0].weather[0].main);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather data:\", error);\r\n      setError(\"Something went wrong. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [city]);\r\n\r\n  // Function to fetch background image based on weather condition\r\n  const fetchBackgroundImage = useCallback(async () => {\r\n    if (!weatherCondition) return; // Avoid API call if no condition is set\r\n\r\n    const query = `${weatherCondition} weather`; // Example: \"Rainy weather\"\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.unsplash.com/photos/random?query=${query}&client_id=${UNSPLASH_ACCESS_KEY}`\r\n      );\r\n      setBackgroundImage(response.data.urls.regular);\r\n    } catch (error) {\r\n      console.error(\"Error fetching background image:\", error);\r\n      setBackgroundImage(\"/default-weather.jpg\"); // Use fallback image\r\n    }\r\n  }, [weatherCondition]);\r\n\r\n  // Fetch weather on first load + when city changes\r\n  useEffect(() => {\r\n    fetchWeatherData();\r\n  }, [fetchWeatherData]);\r\n\r\n  // Fetch background image when weather condition changes\r\n  useEffect(() => {\r\n    fetchBackgroundImage();\r\n  }, [fetchBackgroundImage]);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex flex-col items-center justify-center p-6 bg-cover bg-center relative\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    >\r\n      {/* Dark Overlay for Better Text Visibility */}\r\n      <div className=\"absolute inset-0 bg-black/50\"></div>\r\n\r\n      <div className=\"relative z-10 max-w-6xl w-full bg-white/20 backdrop-blur-md rounded-lg shadow-xl p-8\">\r\n        <h1 className=\"text-4xl font-extrabold text-center text-white mb-6\">\r\n          5-Day Weather Forecast\r\n        </h1>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"flex flex-col sm:flex-row justify-center mb-6 gap-3\">\r\n          <input\r\n            type=\"text\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            placeholder=\"Enter city name...\"\r\n            className=\"w-full sm:w-80 p-3 border-2 border-gray-300 rounded-md focus:outline-none focus:border-blue-500 transition bg-white text-gray-800\"\r\n          />\r\n          <button\r\n            onClick={fetchWeatherData}\r\n            className=\"w-full sm:w-auto bg-blue-600 text-white px-5 py-3 rounded-md font-semibold hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            Get Forecast\r\n          </button>\r\n        </div>\r\n\r\n        {/* Error Message */}\r\n        {error && <p className=\"text-red-400 text-center mb-4\">{error}</p>}\r\n\r\n        {/* Loading Animation */}\r\n        {loading ? (\r\n          <div className=\"text-center text-white font-semibold text-lg animate-pulse\">\r\n            Loading weather data...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* ✅ Display 5-Day Forecast (Including Today) */}\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6\">\r\n              {forecast.map((day) => (\r\n                <div\r\n                  key={day.dt}\r\n                  className=\"p-6 rounded-lg shadow-lg text-center transition transform hover:scale-105 hover:shadow-2xl bg-white/30 backdrop-blur-lg\"\r\n                >\r\n                  <p className=\"font-bold text-white\">\r\n                    {new Date(day.dt_txt).toLocaleDateString()}\r\n                  </p>\r\n                  <img\r\n                    src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                    alt={day.weather[0].description}\r\n                    className=\"mx-auto w-24\"\r\n                  />\r\n                  <p className=\"text-3xl font-bold text-white\">\r\n                    {Math.round(day.main.temp)}°C\r\n                  </p>\r\n                  <p className=\"capitalize text-gray-200 text-lg\">\r\n                    {day.weather[0].description}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}